{
  "name": "mpremote",
  "displayName": "MPRemote",
  "description": "Command palette access for MicroPython mpremote",
  "icon": "images/snake.png",
  "publisher": "DavesCodeMusings",
  "version": "1.21.2",
  "engines": {
    "vscode": "^1.79.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/DavesCodeMusings/mpremote-vscode.git"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "mpremote.refreshSerialPorts",
        "category": "MPRemote",
        "title": "Rescan available serial ports",
        "icon": "$(refresh)"
      },
      {
        "command": "mpremote.cat",
        "category": "MPRemote",
        "title": "Show contents of a remote file (cat)",
        "icon": "$(file-text)"
      },
      {
        "command": "mpremote.chdir",
        "category": "MPRemote",
        "title": "Change remote working directory (chdir)",
        "icon": "$(file-directory)"
      },
      {
        "command": "mpremote.devs",
        "category": "MPRemote",
        "title": "Show attached device info (devs)",
        "icon": "$(list-ordered)"
      },
      {
        "command": "mpremote.download",
        "title": "Download a file from remote filesystem (cp)",
        "category": "MPRemote",
        "icon": "$(arrow-down)"
      },
      {
        "command": "mpremote.exec",
        "title": "Run a Python statement on remote device (exec)",
        "category": "MPRemote",
        "icon": "$(run)"
      },
      {
        "command": "mpremote.ls",
        "title": "List files on remote filesystem (ls)",
        "category": "MPRemote"
      },
      {
        "command": "mpremote.mipInstall",
        "category": "MPRemote",
         "title": "Install a package on remote filesystem (mip)",
         "icon": "$(package)"
      },
      {
          "command": "mpremote.mkdir",
          "title": "Make a new directory (mkdir)",
          "category": "MPRemote",
          "icon": "$(file-directory-create)"
      },
      {
        "command": "mpremote.repl",
        "category": "MPRemote",
        "title": "Enter REPL prompt (repl)",
        "icon": "$(repl)"
      },
      {
        "command": "mpremote.reset",
        "title": "Reset device (reset)",
        "category": "MPRemote",
        "icon": "stop"
      },
      {
        "command": "mpremote.rm",
        "title": "Remove a file from remote filesystem (rm)",
        "category": "MPRemote",
        "icon": "$(trash)"
      },
      {
        "command": "mpremote.rmdir",
        "title": "Remove a directory from remote filesystem (rmdir)",
        "category": "MPRemote",
        "icon": "$(trash)"
      },
      {
        "command": "mpremote.run",
        "title": "Run file on remote device (run)",
        "category": "MPRemote",
        "icon": "$(run)"
      },
      {
        "command": "mpremote.setrtc",
        "title": "Set realtime clock to match host date-time (setrtc)",
        "category": "MPRemote",
        "icon": "$(clock)"
      },
      {
        "command": "mpremote.sync",
        "title": "Upload all project files to remote filesystem (sync)",
        "category": "MPRemote",
        "icon": "$(arrow-up)"
      },
      {
        "command": "mpremote.upload",
        "title": "Upload file to remote filesystem (cp)",
        "category": "MPRemote",
        "icon": "$(arrow-up)"
      }
    ],
    "configuration": {
      "title": "MPRemote",
      "properties": {
        "mpremote.serialPort.skip": {
          "type": "string",
          "default": "",
          "description": "For serial ports that are present on the development host, but will never have a microcontroller attached. Enter them here to avoid erroneous detection. Use commas to separate multiple ports."
        },
        "mpremote.startupCheck.skip": {
          "type": "boolean",
          "default": false,
          "description": "Skip checks for python binary and mpremote module at start-up. Select this if you use a Python virtual environment to avoid errors."
        }
      }
    },
    "views": {
      "explorer": [
        {
          "id": "serialPortView",
          "name": "Serial Ports",
          "visibility": "visible"
        }
      ]
    },
    "submenus": [
      {
        "id": "mpremote.editorContextSubMenu",
        "label": "MPRemote",
        "when": "resourceLangId == python"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "submenu": "mpremote.editorContextSubMenu",
          "group": "mpremote",
          "when": "resourceLangId == python"
        }
      ],
      "explorer/context": [
        {
          "submenu": "mpremote.editorContextSubMenu",
          "group": "mpremote",
          "when": "resourceLangId == python || resourceExtname == .py"
        }
      ],
      "mpremote.editorContextSubMenu": [
        {
          "command": "mpremote.run"
        },
        {
          "command": "mpremote.upload"
        }
      ],
      "view/title": [
          {
              "command": "mpremote.refreshSerialPorts",
              "when": "view == serialPortView",
              "group": "navigation"
          },
          {
            "command": "mpremote.devs",
            "when": "view == serialPortView",
            "group": "navigation"
        }
      ],
      "view/item/context": [
          {
              "command": "mpremote.cat",
              "group": "1_fileGroup@1",
              "when": "view == serialPortView"
          },
          {
              "command": "mpremote.chdir",
              "group": "2_dirGroup@1",
              "when": "view == serialPortView"
          },
          {
            "command": "mpremote.download",
            "group": "1_fileGroup@2",
            "when": "view == serialPortView"
          },
          {
            "command": "mpremote.exec",
            "group": "3_deviceGroup@1",
            "when": "view == serialPortView"
          },
          {
              "command": "mpremote.ls",
              "group": "1_fileGroup@3",
              "when": "view == serialPortView"
          },
          {
              "command": "mpremote.mipInstall",
              "group": "3_deviceGroup@2",
              "when": "view == serialPortView"
          },
          {
              "command": "mpremote.mkdir",
              "group": "2_dirGroup@2",
              "when": "view == serialPortView"
          },
          {
              "command": "mpremote.repl",
              "group": "3_deviceGroup@3",
              "when": "view == serialPortView"
          },
          {
              "command": "mpremote.reset",
              "group": "3_deviceGroup@4",
              "when": "view == serialPortView"
          },
          {
            "command": "mpremote.rm",
            "group": "1_fileGroup@4",
            "when": "view == serialPortView"
          },
          {
            "command": "mpremote.rmdir",
            "group": "2_dirGroup@3",
            "when": "view == serialPortView"
          },
          {
              "command": "mpremote.setrtc",
              "group": "3_deviceGroup@5",
              "when": "view == serialPortView"
          },
          {
              "command": "mpremote.sync",
              "group": "1_fileGroup@5",
              "when": "view == serialPortView"
          }
        ]
    },
    "viewsWelcome": [
      {
        "view": "serialPortView",
        "contents": "[Refresh $(refresh)](command:mpremote.refreshSerialPorts)\nAttach a microcontroller and refresh to access MPRemote commands from the context menu.",
        "when": "workbenchState == empty"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^8.0.0",
    "@types/mocha": "^10.0.0",
    "@types/node": "16.x",
    "@types/vscode": "^1.79.0",
    "@typescript-eslint/eslint-plugin": "^5.42.0",
    "@typescript-eslint/parser": "^5.42.0",
    "@vscode/test-electron": "^2.2.0",
    "eslint": "^8.26.0",
    "glob": "^8.0.3",
    "mocha": "^10.1.0",
    "typescript": "^4.8.4"
  },
  "dependencies": {
    "serialport": "^11.0.0"
  }
}